@model UniversityCourseResultManagementSystem.Models.CourseAssign
@{
	ViewBag.Title = "Course Assign";
}
<h2>Course Assign to Teacher</h2>
<div align="center">
	@if (@ViewBag.Message != null)
	{
		<span class="alert alert-success">@ViewBag.Message</span>
	}
</div>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">

		<hr />
		@Html.ValidationSummary(true)
		<div class="form-group">
			@Html.LabelFor(model => model.DepartmentId, "Department", new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.DepartmentId, ViewBag.DepartmentId as SelectList, "--Select Department--", new { @id = "ddlDepartmentId", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.DepartmentId, "", new { id = "DepartmentErrorLabel", @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.TeacherId, "Teacher", new { @class = "control-label col-md-2" })
			<div class="col-md-10">

				<select name="ddlTeacherId" id="ddlTeacherId" class="form-control"></select>
				@Html.ValidationMessageFor(model => model.TeacherId, "", new { id = "TeacherErrorLabel", @class = "text-danger" })

			</div>
		</div>
		@*<div class="form-group">
			@Html.LabelFor(model => model.CreditTaken, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.CreditTaken, new { htmlAttributes = new { name = "creditTaken", id = "creditTaken", @class = "form-control", onfocus = "blur()" } })
				@Html.ValidationMessageFor(model => model.CreditTaken)
			</div>
			</div>*@
		<div class="form-group">
			<label class="control-label col-md-2">Credit to be taken</label>
			<div class="col-md-10">
				<input type="text" name="creditTaken" id="creditTaken" readonly="readonly" class="form-control" />
			</div>
		</div>
		@*<div class="form-group">
				@Html.LabelFor(model => model.CreditLeft ,"Remaining credit", new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.CreditLeft, new { htmlAttributes = new { name = "creditLeft",id = "creditLeft", @class = "form-control", onfocus = "blur()" } })
					@Html.ValidationMessageFor(model => model.CreditLeft)
				</div>
			</div>*@
		<div class="form-group">
			<label class="control-label col-md-2">Remaining credit</label>
			<div class="col-md-10">
				<input type="text" name="creditLeft" id="creditLeft" readonly="readonly" class="form-control" />
			</div>
		</div>
		<div class="form-group">
			<label class="control-label col-md-2">Course Code</label>
			<div class="col-md-10">
				<select name="ddlCourseId" id="ddlCourseId" class="form-control"></select>
				@Html.ValidationMessageFor(model => model.CourseID, "", new { id = "CourseErrorLabel", @class = "text-danger" })

			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<input type="text" name="courseName" id="courseName" readonly="readonly" class="form-control" />
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Credit, new { @class = "control-label col-md-2", @readonly = "readonly" })
			<div class="col-md-10">
				<input type="text" name="courseCredit" id="courseCredit" readonly="readonly" class="form-control" />
			</div>
		</div>
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" name="submit" id="submit" value="Assign" class="btn btn-primary btn-sm" />
			</div>
		</div>
		<br /><br />
		<div class="form-group">
			<div class="col-md-10">
				<p>
					<label id="AssignSuccessLabel" style="color: green;"></label>
					<label id="AssignErrorLabel" style="color: red;"></label>
				</p>
			</div>
		</div>
	</div>
}
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script>
		$(function() {

			$("#ddlDepartmentId").change(function() {

				ResetLabel();

				$("#ddlTeacherId").empty();
				var departmentId = $("#ddlDepartmentId").val();
				var jasonData = { deptId: departmentId };
				$("#ddlTeacherId").append('<option value=0>Select Teacher</option>');
				$.ajax({
					type: "POST",
					url: '@Url.Action("GetTeacherByDeptId", "CourseAssign")',
					contentType: "application/json; charset=utf-8",
					data: JSON.stringify(jasonData),
					dataType: "json",
					success: function(data) {
						console.log();
						$.each(data,
							function(key, value) {
								$("#ddlTeacherId").append('<option value=' + value.Id + '>' + value.TeacherName + '</option>');

							});
					},

				});


				$("#ddlCourseId").empty();
				var jasonData = { deptId: departmentId };
				$("#ddlCourseId").append('<option value=0>Select Course</option>');
				$.ajax({
					type: "POST",
					url: '@Url.Action("GetCourseByDeptId", "CourseAssign")',
					contentType: "application/json; charset=utf-8",
					data: JSON.stringify(jasonData),
					dataType: "json",
					success: function(data) {
						$.each(data,
							function(key, value) {

								$("#ddlCourseId").append('<option value=' + value.Id + '>' + value.CourseCode + '</option>');

							});
					},

				});

				return false;
			});

			$("#ddlTeacherId").change(function() {

				var teacherSelected = $("#ddlTeacherId").val();
				var jsonData = { TeacherId: teacherSelected };
				$.ajax({
					type: "POST",
					url: '@Url.Action("GetTeacherById", "CourseAssign")',
					contentType: "application/json; charset=utf-8",
					data: JSON.stringify(jsonData),
					dataType: "json",
					success: function(data) {

						// alert(data.CreditTaken + " " + data.CreditLeft);

						$("#creditTaken").val(data.CreditTaken);
						$("#creditLeft").val(data.CreditLeft);

					},

				});

				if (TeacherId == 0) {
					$("#creditTaken").val("");
					$("#creditLeft").val("");
				}
				return false;
			});

			$("#ddlCourseId").change(function() {

				DecisionLabel();

				var courseSelected = $("#ddlCourseId").val();
				var jsonData = { courseId: courseSelected };
				$.ajax({
					type: "POST",
					url: '@Url.Action("GetCourseById", "CourseAssign")',
					contentType: "application/json; charset=utf-8",
					data: JSON.stringify(jsonData),
					dataType: "json",
					success: function(data) {

						//alert(data.CourseName + " " + data.CourseCredit);

						$("#courseName").val(data.CourseName);
						$("#courseCredit").val(data.CourseCredit);
					},
				});
				if (courseId == 0) {
					$("#courseName").val("");
					$("#courseCredit").val("");
				}
				return false;
			});


			$("#submit").click(function () {

				
				var departmentId = $("#ddlDepartmentId").val();
				if (departmentId == "") {
					$("#DepartmentErrorLabel").text("Select  Department ");					
				}

				var teacherId = $("#ddlTeacherId").val();
				if (teacherId == "") {
					$("#TeacherErrorLabel").text("Select Teacher");
				}

				var courseId = $("#ddlCourseId").val();
				if (courseId == "") {
				$("#CourseErrorLabel").text("Select a Course");
				}



				// alert("Course Credit: " + $("#courseCredit").val());

				var creditAvailable = $("#creditLeft").val() - $("#courseCredit").val();
				var status = false;
				if (creditAvailable < 0) {

					status = confirm("This will cross total assigned credit for this teacher. Do You Proced...");
				}
				if (status == true || creditAvailable > 0) {

					var totalTakenCredit = $("#creditTaken").val();

					var jasonData = {
						DepartmentId: departmentId,
						TeacherId: teacherId,
						CourseId: courseId,
						CreditTaken: totalTakenCredit,
						CreditLeft: creditAvailable
					};
					$.ajax({
						type: "POST",
						url: '@Url.Action("SaveCourseAssign", "CourseAssign")',
						contentType: "application/json; charset=utf-8",
						data: JSON.stringify(jasonData),
						dataType: "json",
						success: function(data) {

							if (data == true)
								$("#AssignSuccessLabel").text("Successfully Assigned");
							//alert("Successfully Assigned");
							else {
								$("#AssignErrorLabel").text("This course is already Assigned");
								//alert("This course is already Assigned");
							}
							ResetValue();
						},
					});

				}
				return false;


		});
		return false;
	});

        function ResetValue() {
            $("#creditLeft").val("");
            $("#creditTaken").val("");
            $("#ddlCourseId").empty();
            $("#ddlTeacherId").empty();
            $("#courseName").val("");
            $("#courseCredit").val("");
            $("#ddlDepartmentId").prop("selectedIndex", 0);
        }

        function ResetLabel() {
            $("#DeptErrorLabel").text("");
            $("#TeacherErrorLabel").text("");
            $("#CourseErrorLabel").text("");
        }

        function DecisionLabel() {
            $("#AssignSuccessLabel").text("");
            $("#AssignErrorLabel").text("");
        }
	</script>
}
